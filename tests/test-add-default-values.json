[
    {
        "description": "Given a schema with a default set for the 'name' property",
        "schema": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string",
                    "default": "Kai"
                }
            }
        },
        "tests": [
            {
                "description": "When the schema is applied to an empty object, the name property should be set to default value",
                "instance": {},
                "expected": {
                    "name": "Kai"
                }
            },
            {
                "description": "When the schema is applied to an object where 'name' exists, then the property should not change",
                "instance": {
                    "name": "John"
                },
                "expected": {
                    "name": "John"
                }
            }
        ]
    },
    {
        "description": "Add defaults to nested properties",
        "schema": {
            "type": "object",
            "properties": {
                "person": {
                    "type": "object",
                    "properties": {
                        "name": {
                            "type": "string",
                            "default": "John"
                        },
                        "age": {
                            "type": "number",
                            "default": 25
                        }
                    }
                }
            }
        },
        "tests": [
            {
                "description": "When the schema is applied to an empty object, default values should be added to nested properties",
                "instance": {},
                "expected": {
                    "person": {
                        "name": "John",
                        "age": 25
                    }
                }
            }
        ]
    },
    {
        "description": "Add defaults to array",
        "schema": {
            "type": "object",
            "properties": {
                "numbers": {
                    "type": "array",
                    "items": {
                        "type": "number"
                    },
                    "default": [
                        40
                    ]
                }
            }
        },
        "tests": [
            {
                "description": "When the schema is applied to an object with an array, default values should be added to array items",
                "instance": {},
                "expected": {
                    "numbers": [
                        40
                    ]
                }
            }
        ]
    },
    {
        "description": "Add defaults to tuple",
        "schema": {
            "type": "object",
            "properties": {
                "numbers": {
                    "type": "array",
                    "items": [
                        {
                            "type": "number",
                            "default": 39
                        },
                        {
                            "type": "string",
                            "default": "foo"
                        },
                        {
                            "type": "object",
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "default": "Logan"
                                }
                            }
                        },
                        {
                            "type": "array",
                            "items": [
                                {
                                    "type": "string",
                                    "default": "Agnivesh"
                                },
                                {
                                    "type": "number",
                                    "default": 99999
                                }
                            ]
                        }
                    ]
                }
            }
        },
        "tests": [
            {
                "description": "When the schema is applied to an object with a tuple, default values should be added to tuple items",
                "instance": {},
                "expected": {
                    "numbers": [
                        39,
                        "foo",
                        {
                            "name": "Logan"
                        },
                        [
                            "Agnivesh",
                            99999
                        ]
                    ]
                }
            }
        ]
    },
    {
        "description": "Handle invalid schema",
        "schema": {
            "type": "invalid"
        },
        "tests": [
            {
                "description": "When the schema is invalid, an error should be thrown",
                "instance": {},
                "expected": "Invalid JSON Schema: Schema must be an object."
            }
        ]
    },
    {
        "description": "Given a schema with a default set for the required properties",
        "schema": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string",
                    "default": "Doe"
                },
                "age": {
                    "type": "number",
                    "default": 33
                }
            },
            "required": [
                "name"
            ]
        },
        "tests": [
            {
                "description": "When the schema is applied to an empty object, the properties which are present in the required list must set to default value",
                "instance": {},
                "expected": {
                    "name": "Doe",
                    "age": 33
                }
            },
            {
                "description": "When the schema is applied to an object which is already having some properties, the properties which are present in the required list should set to default value without changing the previous properties of the instance",
                "instance": {
                    "age": 90
                },
                "expected": {
                    "name": "Doe",
                    "age": 90
                }
            }
        ]
    }
]